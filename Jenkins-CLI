1.From this lab onwards, Jenkins would be pre-deployed on the machine called 
jenkins-server.
 You can access the UI by clicking on the Jenkins button on top of the terminal. 
Login into the UI using the below credentials:

Username: admin

Password: Adm!n321
Notes:

1. You might need to restart Jenkins service after installing some plugins
 or after making some configuration changes. In such cases, please make sure 
that the Jenkins service is back to a running state before you submit your solution.

2. Re-use the Jenkins credentials given above.

2. How many users are currently configured for this Jenkins instance?

Login to the UI, click on the People tab and find out the number of users.

3. We just updated the configuration and restarted the Jenkins service.
 Login to the UI again and find out the number of users that have been created.

UserName: admin

Password: Adm!n321

4. What is the User ID of the new user that was added?
Ans = mike

5.What is the Full Name of this user?
Mike Wazoski

6.For the rest of the lab, let us make use of mike to navigate through the Jenkins UI.

Logout of the Jenkins UI as the admin user and log back in with the following credentials:

UserName: mike

Password: M!k3@123
Click on the user called mike inside the People tab.

Next, click on Configure and inspect if a SSH Key has been added for this user.
Ans = No

7. The user called mike has also been created in the jenkins-server.

root@jenkins-server:~# id mike
uid=1001(mike) gid=1002(mike) groups=1002(mike),27(sudo)
root@jenkins-server:~# 

Switch to this user by running the below command:

root@jenkins-server:~# su - mike 
mike@jenkins-server:~$

mike@jenkins-server:~$ cat .ssh/jenkins_key.pub 
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQClraYlzfxuFDiL1a+7njJlrap6kzvFhWNQ4PYVQfCzfUvED6WPGXCu3ZAqMqpOLHEQkBa+hPuB+0VPZ4GMCjyxzR9YbqgxHQV44KdEUTv52KqZa5xpH0kR0CslGzXrJfEyOjx+rG/JIq0Pj0MtgnIoclqpIoa9Vdg0yUtiioqpoKcI73nbVhxd24auUKhz+LXngzuhSwEU1Dd7NuVVfiDjh4vxjVJYfIlhxQ9gYMUwiFsQsavyLPDQF9Q5/r/wS+YIMaOTmWcSdh4Cw8zQNDJ3vvHr0xdqfua9WMo/JodAEH4w0FfHcBJbz7dZA3WLsEF/aV+TBs6bFzE/FRwJkMlAfUGzbqt/Xf/JlCxc81yssZS+dQ4BkyQ07NuBdB3tES27It6LqR3P1j311NF5ZMU4kqjjCPfam3KnHxRw51BV7PWYh1M+MS3uxLhuY4SLniOpucJwKajuzDJkKbWRg63aj7BO8OUhVQMiuWSnRt473c7LRW5NaUhHdAyvbyw6vFs= mike@jenkins-server
mike@jenkins-server:~$ 

8. We have configured the SSH service in Jenkins to listen on a fixed port.
 To find out the port in use, run the command below:

curl -Lv http://localhost:8085/login 2>&1 | grep -i 'x-ssh-endpoint'


Which port does the Jenkins SSH service use?
You can also check the port used by navigating to Dashboard ---> Manage Jenkins --> Security --> SSH Server

9 Now that we have the port used by the Jenkins SSH server, let us begin interacting with Jenkins over ssh with the user mike.

As mike, try running the following commands:

mike@jenkins-server:~$ ssh -i /home/mike/.ssh/jenkins_key -l mike -p 8022 jenkins-server help


Keep a note of the options used with the SSH command:

    -i flag is used to point to mike's private SSH key. Remember, we have already added the public key in the Jenkins configuration.
    -l is the login user which in our example is mike
    -p is the port which we found out in the previous step to be 8022

10. Using the help command, find out the built-in command to safely restart Jenkins from the CLI.

safe-restart
    Safely restart Jenkins.

Try running the below command to restart jenkins from the CLI:

mike@jenkins-server:~$ ssh -i /home/mike/.ssh/jenkin










