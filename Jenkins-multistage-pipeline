
YING WITH MULTI-STAGE PIPELINE

1. Jenkins server is already installed and it's running on port 8085. You can access the same
 using Jenkins button on the top bar. Login into the Jenkins server using below given credentials:


Username: bob

Password: bob321


Apart from this there is a Gitea server installed, which has a repository named go-app. This repository
 has two branches dev and master, you will get to know about their usage in the next question. You can 
access the Gitea server using Gitea button on the top bar. Login into the Gitea server using below given credentials:


Username: bob

Password: bob123


Notes:


a. You might need to restart Jenkins service after installing some plugins or after making some configuration
 changes etc. In such case please make sure Jenkins service is back up before you submit your solution.


b. Please make a note of Jenkins credentials given above.


2. Our application development team has recently finished the MVP development for one of the applications 
and it's ready to be deployed on production.

The go-app repository on the Gitea server contains the source code of this application. The dev branch of 
this repository is used for testing, hence we want to deploy it on the dev environment and the master branch 
should be deployed on the production environment.


On dev server /opt/go-app is the document root of the application and we have already setup the dev branch
 over there for your convenience. In your build step, you will just need to pull the latest dev branch code
 from the repository using git pull command. You can access the dev server using below given credentials:


Host: gotest-dev01

User: bob

Password: caleston123


Similarly on production server /opt/go-app is the document root of the application and we have already setup 
the master branch over there for your convenience. In your build step, you will just need to pull the latest
 master branch code from the repository using git pull command. You can access the production server using
 below given credentials:


Host: gotest-prod01

User: bob

Password: caleston123


Create a pipeline job in Jenkins, and configure it as per details mentioned below:

Prerequisites:

-> Install the required plugins which are needed for adding SSH agent nodes and for creating pipeline jobs.

-> Add dev and production servers as SSH node agents in Jenkins.

-> You can use /opt as the Remote root directory for both of these nodes to avoid any permission issues.

-> To make nodes work, you will also need to add the respective credentials in Jenkins for these servers.


Job configuration:

-> The job name should be go-app-deployment

-> It must be a pipeline job.

-> The first stage here should be to build the dev branch code which must be deployed on the dev 
server/environment, you can name the stage as per your choice. As we have already setup the repo/branch
 on the server so you will just need to run the git pull command.

Here is a hint, how you can make it run on the dev server. To do so, add an agent configuration in each
 of your stages like this:

stage('Build Dev') {
    agent {
        label {
            label 'dev'
            customWorkspace "/opt/go-app"
        }
    }
    steps {
        sh 'git pull'
    }
}



Please note that label 'dev' is the label you will give to your node (so update it accordingly)
 and you will need to set customWorkspace "/opt/go-app" (its same for both of the servers/environments) 
to make it work on this setup/back-end.


-> The second stage should be to run some unit tests (again you can name the stage as per your choice). 
You can execute the tests using a stage like:

stage('Test Dev') {
    agent {
        label {
            label 'dev'
            customWorkspace "/opt/go-app"
        }
    }
    steps {
        sh 'go test ./...'
    }
}




-> The last stage for dev would be to deploy the application. You can use a stage like:

stage('Deploy Dev') {
    agent {
        label {
            label 'dev'
            customWorkspace "/opt/go-app"
        }
    }
    steps {
        script {
            withEnv ( ['JENKINS_NODE_COOKIE=do_not_kill'] ) {
                sh 'go run main.go &'
            }
        }
    }
}



You must have noticed an extra parameter in this stage i.e withEnv ( ['JENKINS_NODE_COOKIE=do_not_kill'] ),
 it is needed to make sure Jenkins doesn't kill the background process we are starting in this stage on the
 respective server.


-> Similarly configure the same stages (with different name and prod specific values) for the production deployment.
 So the pipeline will have total 6 stages (three for each environment).

-> Make sure to build the job at least once and make sure its building successfully.

solution

Login into the Jenkins server and follow the below given steps:

Install Plugins:

1. Go to Manage Jenkins.
2. Click on Plugins.
3. Under Available, search for SSH Build Agents plugin and select it.
4. Now search for Pipeline plugin and select it.
5. Now install these plugins.
6. Once installed click on Restart Jenkins when installation is complete and no jobs are running.


Add Credentials:

1. Go to Manage Jenkins.
2. Click on Credentials.
3. Click on (global) under Domains.
4. From the option on the right side, click on Add Credentials.
5. Enter bob under Username.
6. Enter caleston123 under Password.

7. Leave other options as it is and click on OK.


Add Nodes:

1. Go to Manage Jenkins.
2. Click on Nodes and Clouds.
3. From the option available on the right side, click on New Node.

4. Enter the Node name i.e dev.

5. Enable Permanent Agent option and click on OK.

6. Enter /opt under Remote root directory.

7. Enter dev under Labels.

8. Select Launch Agents via SSH under Launch method.

9. Enter gotest-dev01 under Host and select the credentials you created.

10. Under Host Key Verification Strategy, select Non verifying verification strategy.

11. Leave all other options as it is and click on Save

12. Click on the dev node and there shouldn't be any errors.

13. Just in case the dev node is in error state, then try to relaunch it.

14. Follow same steps for adding prod node, just take care about the node name, label and host.


Create and Configure the job:

1. On the left of the Jenkins dashboard, click on New Item.

2. Enter the job name go-app-deployment.

3. Select Pipeline job and click on OK.

4. Under Pipeline section keep selected Pipeline script as Definition and add below given code in the Script

pipeline {
    agent none
    stages {
        //DEV
        stage('Build Dev') {
            agent {
              label {
                label 'dev'
                customWorkspace "/opt/go-app"
              }
            }
            steps {
                sh 'git pull'
            }
        }
        stage('Test Dev') {
            agent {
              label {
                label 'dev'
                customWorkspace "/opt/go-app"
              }
            }
            steps {
                sh 'go test ./...'
            }
        }
        stage('Deploy Dev') {
            agent {
              label {
                label 'dev'
                customWorkspace "/opt/go-app"
              }
            }
            steps {
              script {
                withEnv ( ['JENKINS_NODE_COOKIE=do_not_kill'] ) {
                  sh 'go run main.go &'
                  }
                }
            }
        }
        //PROD
        stage('Build Prod') {
            agent {
              label {
                label 'prod'
                customWorkspace "/opt/go-app"
              }
            }
            steps {
                sh 'git pull'
            }
        }
        stage('Test Prod') {
            agent {
              label {
                label 'prod'
                customWorkspace "/opt/go-app"
              }
            }
            steps {
                sh 'go test ./...'
            }
        }
        stage('Deploy Prod') {
            agent {
              label {
                label 'prod'
                customWorkspace "/opt/go-app"
              }
            }
            steps {
              script {
                withEnv ( ['JENKINS_NODE_COOKIE=do_not_kill'] ) {
                  sh 'go run main.go &'
                  }
                }
            }
        }
    }
}



5. Finally save the job and build.


3. Once deployed, you should be able to access the dev and production applications using
 Dev App and Prod App buttons respectively on the top of the terminal. The credentials are as below:

Dev:

User: test

Password: test


Production:

User: appuser

Password: app321



